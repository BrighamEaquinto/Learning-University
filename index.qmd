---
eval: false
include: false
---


Things to rate graphing libraries by: 
- grammer of graphics
- plot mathematical equations like ggplot and not like plotly
- 3D capable


## An Open Letter to Graduate Schools: 

Intresting paradigm. Employers want experience. Graduate schools want grades. Competing interests... But they both ultimately want money. 

What's the point of education? Portfolio projects or mastery of subject? 


- Dash dashboards
- Quarto Websites 
- coding word documents
- writing r packages to do calculus
- Quarto Revealjs for presentations (free, animations, speaker timer, speaker notes...)
- character & chapter summarising in readings


What about pages like these?:

- https://www.datacamp.com/tutorial/facets-ggplot-r
- https://www.datacamp.com/tutorial/tidyverse-tutorial-r 

```{r}
library(tidyverse)
library(plotly)
```


```{r}
gg_graph <- ggplot(data = data.frame(x = 0), mapping = aes(x = x))+
                  stat_function(fun = function(x) 2*x + x)+ 
                  xlim(-10, 10)+
                  ylim(-6, 6)

```

```{r}
gg_graph
ggplotly(gg_graph)
```


```{r}
gg1 <- ggplot(cars, aes(x = speed, y = dist)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y~x, se = FALSE, size = 2, color = "orange",
  linetype = "dashed")
gg1
```

```{r}
ggplotly(gg1)
```



```{r}
#| eval: false

fun.1 <- function(x) 2*x + x

data.frame(fun.1)
```

```{r}

bob <- function(x) {
      y <- sin(x)
      return(y)
}

x <- seq(0, 20, 1)

data1 <- data.frame(
      x = x, 
      y = bob(x)
)

data1 %>% head()
# ggplot(aes(x,y))+ 
#       geom_point()+
#       geom_smooth(formula = bob(x))

```



```{r}
fun.1 <- function(x) 2*x + x

p <- ggplot(data.frame(x = 0), aes(x = x))

```


```{r}
p + stat_function(fun = fun.1) + xlim(-5,5)
```

```{r}
p + layer(geom = "path",        # Default. Can be omitted.
          stat = "function",
          fun = fun.1,          # Give function
          mapping = aes(color = "fun.1") # Give a meaningful name to color
          ) +
    scale_x_continuous(limits = c(-5,5)) +
    scale_color_manual(name = "Function", values = c("blue"))
```

```{r}
fun.2 <- function(x) -1 * x + 10
fun.3 <- function(x) 3 * x + 2
```

```{r}
ggplot(data = data.frame(x = 0), mapping = aes(x = x))+ 
    layer(stat = "function",
          fun = fun.1,
          mapping = aes(color = fun.1)
          ) +
    layer(stat = "function",
          fun = fun.2,
          mapping = aes(color = fun.2)
          ) +
    layer(stat = "function",
          fun = fun.3,
          mapping = aes(color = fun.3)
          ) 
    # scale_x_continuous(limits = c(-5, 5)) +
    # scale_color_manual(name = "Functions",
    #                    values = c("blue", "red", "green"), # Color specification
    #                    labels = c("X^2 + X", "-X + 10", "3X + 2"))
```



```{r}
x <- 1:10
df <- data.frame(x)
ggplot(df, aes(x))+
    stat_function(fun=function(x) log(x)/(x-3))
```



<!-- 

Title: 
- Freedom of Education
- Free Education
- Free Deep Introduction to Data Science 

Why this project?
- bootcamp was unorganized
- proof of concept for free education
- The teacher learns more than the student

Education
- proof of concept that educational resourced can be free
- GitHub allows free hosting of websites that are less than 1 GB. This size of everything needed for this website is 0.075 of a gigabite. 
- Minimal maintenance is required
- OpenStax textbook


- 6 main lessons 
- the goal that by the end students will be able to read in, wrangle, and visualize data
- each lesson follows a pattern: 1) Teaching 2) Example 3) Practice

Contents: 
- Lesson 1: Introduction to Data Science
- Lesson 2: Reading in Data
- Lesson 3 & 4: Wrangling Data 
- Lesson 5 & 6: Visualizing Data  




The Problem:
- Education is locked up behind money

The Solution: 
- Use quarto to create website with notes and exercise
- Use GitHub to host website

The Process: 
- 

 -->



 <!-- add this later: https://github.com/dracula/gh-pages -->